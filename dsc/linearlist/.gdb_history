sq
q
start
layout src 
s
n
s
p L.elem 
p *(L.elem)
r
s
start
s
n
q
layout src 
start
s
n
p *S
p S
p S.elem
p *S.elem
p *S.elem + 1
p *S.elem[0]
p S.elem[0]
p S.elem[1]
p S.elem[2]
p S.elem[3]
p S.elem[4]
p S.elem[5]
p S.elem[6]
s
n
q
layout src 
break 7
r
s
p L
p *L
p *L.elem
p *L.elem[0]
p *L.elem[1]
p L.elem[1]
p L.elem[0]
p L.elem[2]
s
p *ptr
p *ptr == L.elem[0]
p *end == L.elem[4]
s
p **L.elem
p *L.elem
p *L.elem[0]
p L.elem[0]
p L.elem[1]
s
p L.elem[1]
p L.elem[0]
s
p L.elem[0]
p L.elem[1]
p *end
s
p L.elem[1]
p L.elem[0]
n
p *ptr
p L.elem[0]
s
p L.elem[0]
p L.elem[1]
p L.elem[2]
break 66
r
kill 7
del 7
r
del 7
r
s
q
layout src 
start
s
n
s
break 66
r
p L.elem[1]
del 66
start
s
fin
n
s
s
s
p *ptr
p *end
p *(ptr+1)
p *(ptr+2)
p *(ptr+3)
s
p *end
p *(end+1)
s
p *(end+1)
s
s
p *(end+1)
p *end
s
p *end
p *(end+1)
s
p *(end+1)
p *end
s
p *end
p *(end+1)
p *(end+2)
p *end
s
p *end
p *(end+1)
p L.elem[1]
n
p L.elem[1]
shell gcc main.c linearlist.c && ./a.out 
q
layout src 
start
s
n
p *L
n
p *L
p (*L)->next
break 13
r
s
n
n
p *end
p (*end).data
p (*end).next
n
p *new
p *end
p **end
n
p **end
n
p **end
n
p **end
p **L
q
layout src 
start
s
n
p *L
q
